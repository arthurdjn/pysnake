[Game]
; Size of the game, in number of cells.
; @type: tuple(int, int)
board_size: (15, 15)
; Fix random numbers.
; @type: int
seed = None


[WindowGame]
; Width & height of a cell, in pixel.
; @type: int
cell_size: 50
; Display a window for the game in pygame.
; It can be better to set False when training.
; @type: bool
render: True
; Show a grid on the game.
; You can activate it by pressing the key 'g'.
; @type: bool
show_grid = True
; Show the snakes' vision.
; You can activate it by pressing the key 'v'.
; @type: bool
show_vision = False
; FPS of the playble game.
; @type: int
fps_play: 10
; FPS when training snakes.
; @type: int
fps_train: 1000


[Snake]
; The initial length of a snake. 
; @type: int
length: 3
; The vision mode used as input in the neural network.
; Either 'distance' or 'binary' 
; @type: str
vision_type: distance
; The mode used to detect the objects.
; @type: int
vision_mode: 8
; Maximal lifespan of a snake.
; @type: int
max_lifespan: None


[NeuralNetwork]
hidden_layers: [20, 12]
activation_hidden: relu
activation_output: softmax


[GeneticAlgorithm]
num_generations: 3000
num_parents: 500
num_offspring: 1000
eta_SBX: 100
probability_SBX: 0.5
probability_SPBX: 0.5
crossover_selection_type: roulette_wheel
mutation_rate: 0.005
mutation_rate_type: static
gaussian_mu: 0
gaussian_std: 1
